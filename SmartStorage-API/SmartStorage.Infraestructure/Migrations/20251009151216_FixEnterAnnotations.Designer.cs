// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartStorage_API.Model.Context;

#nullable disable

namespace SmartStorage_API.Migrations
{
    [DbContext(typeof(SmartStorageContext))]
    [Migration("20251009151216_FixEnterAnnotations")]
    partial class FixEnterAnnotations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartStorage_API.Model.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("EmpCpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("EmpDateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpRg")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Enter", b =>
                {
                    b.Property<int>("EntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntId"));

                    b.Property<DateTime>("EntDateEnter")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EntPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntProId")
                        .HasColumnType("int");

                    b.Property<int>("EntQntd")
                        .HasColumnType("int");

                    b.Property<int>("EntSheId")
                        .HasColumnType("int");

                    b.HasKey("EntId");

                    b.HasIndex(new[] { "EntProId" }, "IX_Enter_productId");

                    b.HasIndex(new[] { "EntSheId" }, "IX_Enter_shelfId");

                    b.ToTable("Enters");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_register");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<int>("EmployeeId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("employee_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("Qntd")
                        .HasColumnType("int")
                        .HasColumnName("qntd");

                    b.HasKey("Id")
                        .HasName("Product-PK");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Product_employeeId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SmartStorage_API.Model.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date_sale")
                        .HasDefaultValueSql("'2024-07-08 00:00:00-03'");

                    b.Property<int?>("EnterId")
                        .HasColumnType("int")
                        .HasColumnName("enterId");

                    b.Property<int>("IdEnter")
                        .HasColumnType("int")
                        .HasColumnName("id_enter");

                    b.Property<int>("Qntd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("qntd");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EnterId" }, "IX_Sale_enterId");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("SmartStorage_API.Model.Shelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_register");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Shelf", (string)null);
                });

            modelBuilder.Entity("SmartStorage_API.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rg");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SmartStorage_API.Model.Enter", b =>
                {
                    b.HasOne("SmartStorage_API.Model.Product", "Product")
                        .WithMany("Enters")
                        .HasForeignKey("EntProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartStorage_API.Model.Shelf", "Shelf")
                        .WithMany("Enters")
                        .HasForeignKey("EntSheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Product", b =>
                {
                    b.HasOne("SmartStorage_API.Model.Employee", "Employee")
                        .WithMany("Products")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Sale", b =>
                {
                    b.HasOne("SmartStorage_API.Model.Enter", "Enter")
                        .WithMany("Sales")
                        .HasForeignKey("EnterId");

                    b.Navigation("Enter");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Employee", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Enter", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Product", b =>
                {
                    b.Navigation("Enters");
                });

            modelBuilder.Entity("SmartStorage_API.Model.Shelf", b =>
                {
                    b.Navigation("Enters");
                });
#pragma warning restore 612, 618
        }
    }
}
